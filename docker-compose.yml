version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_USER=${DB_USER:-weather-monitoring-user}
      - DB_PASSWORD=${DB_PASSWORD:-1234}
      - DB_NAME=${DB_NAME:-weather_monitoring}
      - DATABASE_URL=postgresql://${DB_USER:-weather-monitoring-user}:${DB_PASSWORD:-1234}@db:5432/${DB_NAME:-weather_monitoring}?schema=public
      - KAFKA_BROKER=${KAFKA_BROKER:-kafka:9092}
      - PRISMA_SCHEMA_PATH=${PRISMA_SCHEMA_PATH:-/usr/src/app/prisma/schema.prisma}
      - JWT_SECRET=${JWT_SECRET:-ac96ba1f7447d4810cae914e5d675e4b02ed9fa8e527fa793844aa387123b77fc6ad72e38a3956fe563d23410e9b23dfc8a52ce38d2602f6c4dd415373a5f891}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - ./prisma:/usr/src/app/prisma
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
    command: sh -c "yarn prisma migrate deploy && yarn start & yarn start:processor"

  db:
    image: timescale/timescaledb:latest-pg12
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER:-weather-monitoring-user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-1234}
      - POSTGRES_DB=${DB_NAME:-weather_monitoring}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-weather-monitoring-user} -d ${DB_NAME:-weather_monitoring}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  pgdata: